extends layout

block append head
	link(rel='stylesheet', href='/stylesheets/players_detail.css')
block append header-primary
	div(class='header-content-medal')
		div(class='image-container image-container-medal')
			- var tier = player[0].attributes.stats.skillTier.toString()
			if tier == '0'
				img(class='medal-icon', src='/images/medals/1.png')
			else
				img(class='medal-icon', src='/images/medals/' + tier + '.png')
	div(class='header-content-title')
		h1 #{player[0].attributes.name}
		small Overview
block content
	div(class='header-content-nav-container')
		div(class='header-content-nav')
			nav(class='header-nav-links')
				ul
					li(class='active')
						a(href="") Overview
					li(class='')
						a(href= playerid + "/matches") Matches
					li(class='')
						a(href= playerid + "/heroes") Heroes
	div(class='row')
		div(class='col-sm-4')
			section
				article
					dl
						dt Blitz MMR
						dd #{player[0].attributes.stats.rankPoints.blitz.toFixed(0)}
		div(class='col-sm-4')
			section
				article
					dl
						dt Ranked MMR
						dd #{player[0].attributes.stats.rankPoints.ranked.toFixed(0)}
		div(class='col-sm-4')
			section
				article
					dl
						dt Ranked 5v5 MMR
						dd #{player[0].attributes.stats.rankPoints.ranked_5v5.toFixed(0)}
	div(class='row')
		div(class='col-sm-6')
			section
				article
					dl
						dt Record
						dd 
							span(class="game-record")
								span(class="wins") #{player[0].attributes.stats.wins}
								span(class="sep")  - 
								span(class="losses") #{player[0].losses}
		div(class='col-sm-6')
			section
				article
					dl
						dt Winrate
						dd #{player[0].winRate.toFixed(2)}%
	div(class='inner-content')
		div(class='row')
			div(class='col-md-4')
				div(class='chart section-container')
					section(class='role-distribution')
						header Role Distribution
						article
							canvas(id='roleDistribution')
				div(class='chart section-container')
					section(class='recent-activity')
						header Recent Activity
						article
							canvas(id='recentActivity')
				div(class='chart section-container')
					section(class='recent-winrate')
						header Recent Win Rate
						article
							canvas(id='recentWinrate')
			div(class='col-md-8')
				div(class='most-played-heroes section-container')
					section(class='most-played')
						header Most Played Heroes
							small All Time
						article
							table(class ='heroes-overview table-content')
								thead
									tr
										th(class='sortable' colspan="2") Hero
										th Matches
										th Win%
										th KDA
								tbody
									each hero in playerheroes	
										tr
											td(class='hero-icon') 
												div(class='image-container image-container-hero-icon')
													a(href="/heroes/" + hero.name.replace(/\*/g, "").toLowerCase())
														img(class='image-hero image-icon', src=hero.image)
											td
												a(href="/heroes/" + hero.name.replace(/\*/g, "").toLowerCase())
													span #{hero.name.replace(/\*/g, '')}
											td #{hero.played}
											td #{hero.winrate}
											td #{hero.kda.toFixed(2)}
				div(class='recent-matches section-container')
					section(class='matches')
						header Recent Matches
						article
							table(class = 'matches-overview table-content')
								thead
									tr
										th(class='sortable', colspan="2") Hero
										th Result
										th Mode
										th Duration
										th KDA
								tbody
									each match in recent_matches
										if match.seconds < 10
											- var seconds = "0".concat(match.seconds.toString())
										tr
											td(class='hero-icon') 
												div(class='image-container image-container-hero-icon')
													a(href="/heroes/" + match.hero_name.replace(/\*/g, "").toLowerCase())
														img(class='image-hero image-icon', src=match.image)
											td
												a(href="/matches/" + match.matchId)
													span #{match.hero_name.replace(/\*/g, "")}
											td
												if match.result == 'true'
													span Won Match
												else
													span Lost Match
											td #{match.gameMode}
											if match.seconds < 10
												td #{match.minutes}:#{seconds}
											else
												td #{match.minutes}:#{match.seconds}
											td #{match.kills}/#{match.deaths}/#{match.assists}
	script(src='/scripts/Chart.js')
	script.
		var category = [];
		var winrate = [];
		var gamesPlayed = [];
		var roles = [];

		!{roleDistribution}.forEach(function(element) {
			var carry = element.carryTotal.toString();
			var jungler = element.junglerTotal.toString();
			var captain = element.captainTotal.toString();
			roles.push(carry);
			roles.push(jungler);
			roles.push(captain);
		});


		!{weekly}.forEach(function(element) {
			var day = element._id.day.toString();
			var month = element._id.month.toString();
			var divider = "/";
			var date = month.concat(divider,day);
			category.push(date);
			winrate.push(element.winrate);
			gamesPlayed.push(element.total);
		});
		var ctx = document.getElementById("recentActivity");
		var recentActivityChart = new Chart (ctx, {
			type: 'line',
			data: {
				labels: category,
				datasets: [{
					data: gamesPlayed,
					borderColor: '#C4C4C4',
					backgroundColor: 'rgba(196,196,196,0.4)'
				}],
			},
			options: {
				legend: {
					display: false
				},
			}
		});

		var xtx = document.getElementById("recentWinrate");
		var recentWinrateChart = new Chart (xtx, {
			type: 'line',
			data: {
				labels: category,
				datasets: [{
					data: winrate,
					borderColor: '#F9B02F',
					backgroundColor: 'rgba(249,176,47,0.4)'
				}],
			},
			options: {
				legend: {
					display: false
				},
			}
		});
		
		var ztx = document.getElementById("roleDistribution");
		var roleDistribution = new Chart (ztx, {
			type: 'doughnut',
			data: {
				labels: ["Carry", "Jungler", "Captain"],
				datasets: [{
					data: roles,
					backgroundColor: ['rgb(255,99,132)','rgb(54,162,235)','rgb(255,205,86)']
				}],
			},
			options: {
				legend: {
					position: 'left'
				},
			}
		});
